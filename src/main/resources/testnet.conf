
# A config for the Test Network which is supposed to serve needs of non-breaking changes testing.

ergo {
  networkType = "testnet"
  node {
    # A node is considering that the chain is synced if sees a block header with timestamp no more
    # than headerChainDiff blocks on average from future
    # testnet value is 800 blocks ~= 1600 minutes (~1.1 days)
    headerChainDiff = 800

    # having more internal miner threads helps to reproduce real use cases, like 100 GPU miners
    internalMinersCount = 1

    # GPU miners are currently polling at 100ms interval
    internalMinerPollingInterval = 200ms

    # maximum cost of transaction for it to be propagated
    maxTransactionCost = 800000
  }

  chain {
    # Network address prefix, currently reserved values are 0 (money chain mainnet) and 16 (money chain testnet)
    addressPrefix = 16
    # Difficulty network start with
    initialDifficultyHex = "01"

    # Length of an epoch in difficulty recalculation. 1 means difficulty recalculation every block
    epochLength = 128

    # Monetary config for chain
    monetary {
      # delay between the block mined and time when the reward can be spend
      minerRewardDelay = 72
    }

    voting {
      # Length of a voting epoch.
      votingLength = 128

      # Voting epochs to vote for soft-fork
      softForkEpochs = 32

      # Voting epochs to activate a soft-fork after acceptance
      activationEpochs = 32

      # Activation height for testnet protocol version 2 (client version 4.0.0 hard-fork)
      version2ActivationHeight = 128

      version2ActivationDifficultyHex = "20"
    }

    reemission {
      checkReemissionRules = true

      emissionNftId = "04ae3eeb05eb726669d015c4d869ade3824db59380785f6a3b2ae8976166e1ed"

      reemissionTokenId = "06ea2538d47307a68e992a11e139cf0fbf3401202fc1ddbaf2bdd085969febbf"

      reemissionNftId = "06ead0bbc84a0ccb20c550867c1daebc47819219d7a1e9e2ff2460c3fd3900e2"

      activationHeight = 179457

      reemissionStartHeight = 180000

      injectionBoxBytesEncoded = "b0a1cc8ff3031003040005808098f4e9b5ca6a0402d1ed91c1b2a4730000730193c5a7c5b2a4730200f9ea0a0204ae3eeb05eb726669d015c4d869ade3824db59380785f6a3b2ae8976166e1ed0106ea2538d47307a68e992a11e139cf0fbf3401202fc1ddbaf2bdd085969febbf80d88ee16f00fc5ce83644f3ab2e4b23060856daf4dca7c11cb7dffef99c472dc097f2c9d86a00"
    }

    # Base16 representation of genesis state roothash
    genesisStateDigestHex = "21660785f08767ef2b5f311827e896a4b59c9d39b8f036d71af1e9c7f02120de02"
  }

  wallet.secretStorage.secretDir = ${ergo.directory}"/wallet/keystore"
}

scorex {
  network {
    magicBytes = [2, 0, 0, 2]
    bindAddress = "0.0.0.0:9020"
    nodeName = "ergo-testnet-4.0.24"
    nodeName = ${?NODENAME}
    knownPeers = [
      "213.239.193.208:9020",
      "37.156.20.158:9020"
    ]
  }
  restApi {
    apiKeyHash = null
  }
}
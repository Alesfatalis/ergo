
# A config for the Test Network which is supposed to serve needs of non-breaking changes testing.

ergo {
  networkType = "testnet"
  node {
    # A node is considering that the chain is synced if sees a block header with timestamp no more
    # than headerChainDiff blocks on average from future
    # testnet value is 800 blocks ~= 1600 minutes (~1.1 days)
    headerChainDiff = 800

    # having more internal miner threads helps to reproduce real use cases, like 100 GPU miners
    internalMinersCount = 1

    # GPU miners are currently polling at 100ms interval
    internalMinerPollingInterval = 200ms

    # maximum cost of transaction for it to be propagated
    maxTransactionCost = 800000
  }

  chain {
    # Network address prefix, currently reserved values are 0 (money chain mainnet) and 16 (money chain testnet)
    addressPrefix = 16
    # Difficulty network start with
    initialDifficultyHex = "01"

    # Length of an epoch in difficulty recalculation. 1 means difficulty recalculation every block
    epochLength = 128

    # Monetary config for chain
    monetary {
      # delay between the block mined and time when the reward can be spend
      minerRewardDelay = 72
    }

    voting {
      # Length of a voting epoch.
      votingLength = 128

      # Voting epochs to vote for soft-fork
      softForkEpochs = 32

      # Voting epochs to activate a soft-fork after acceptance
      activationEpochs = 32

      # Activation height for testnet protocol version 2 (client version 4.0.0 hard-fork)
      version2ActivationHeight = 128

      version2ActivationDifficultyHex = "20"
    }

    reemission {
      checkReemissionRules = true

      emissionNftId = "06cfb0710689cf6f67237b3e9f9b2109c71b24890f81ea584cadb977e832c6db"

      reemissionTokenId = "06eb3a8229b6ac6e3de9a99cb19f924bc3e1a002f0c99ce4df40513c837376a6"

      reemissionNftId = "06e3b504fdbd8974e6797162f7303ad1f105fe4a3c93f48e53ea4fb73f4ebeec"

      activationHeight = 180382

      reemissionStartHeight = 180400

      injectionBoxBytesEncoded = "a8dd95dbfa011003040005808098f4e9b5ca6a0402d1ed91c1b2a4730000730193c5a7c5b2a4730200f4800b0206cfb0710689cf6f67237b3e9f9b2109c71b24890f81ea584cadb977e832c6db0106eb3a8229b6ac6e3de9a99cb19f924bc3e1a002f0c99ce4df40513c837376a680808cfaf49aa535002651afb62de8c8b82cf7d7aa764a5c7e9ab0ce9870eb3cefd8ac47cc2949d34e00"
    }

    # Base16 representation of genesis state roothash
    genesisStateDigestHex = "21660785f08767ef2b5f311827e896a4b59c9d39b8f036d71af1e9c7f02120de02"
  }

  wallet.secretStorage.secretDir = ${ergo.directory}"/wallet/keystore"
}

scorex {
  network {
    magicBytes = [2, 0, 0, 2]
    bindAddress = "0.0.0.0:9020"
    nodeName = "ergo-testnet-4.0.24"
    nodeName = ${?NODENAME}
    knownPeers = [
      "213.239.193.208:9020",
      "37.156.20.158:9020"
    ]
  }
  restApi {
    apiKeyHash = null
  }
}